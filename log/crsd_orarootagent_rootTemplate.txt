AGFW assuming \S+ entry point defined in script.
Aborted cmd entrypoint returned \S+ check for resource: \S+ \S+ \S+
AcfsAgent::Constructor: Entered.
ActiveAddr::Published \S+ new address \S+ \s*\S+ \S+ \S+ \S+ \S+ \S+ \S+
Added new resource: \S+ \S+ \S+ to the agfw
Added new restype: \S+
Adding \S+ on \S+
AddressType = \S+
Agent Framework started successfully
Agent do not have any action entries defined for type: \S+
Agent does not have the type: \S+
Agent framework initialized, Process Id = \S+
Agent is exiting with exit code: \S+
Agent is started with userid: root , expected user: root
Agent received the message: .* \S+ \S+
Agent sending \S+ \S+ \S+ .* \S+ \S+
Agent sending reply for: .* \S+ \S+
Agent::Agent \S+ \S+ \S+
Agent::commonCheck check failed \S+ \S+
Agent::doStateDump  last call info:
Agent::doStateDump Default Agent Dump
Agent::flagUsrOraOpiIsSet\(.*\) reason user.tha
Agent::getDeploymentPlatformId return raconpremise
Agent::getDeploymentPlatformId return
Agent::getNodeName getCSSAttribute
Agent::getResAgent \S+ \S+
Agent::setResType setResType \S+
Agent::valueOfAttribIs attrib: \S+ compare value: \S+ attribute value: \S+
Agent::valueOfAttribIs attrib: \S+ compare value: tha attribute value:
Agent::valueOfAttribIs returns \S+
AgentException caught in VipAgent::check\(.*\)
Agfw calling user exitCB, will exit on return
Agfw engine module has enabled...
Argument \S+ is: \S+
Argument count \(.*\) for this daemon is \S+
Arp::sCreateSocket .*
Arp::sFlushArpCache .*
Arp::sSend:  sending type \S+
Arp::sUnArp .*
BaseFS::Constructor: Entered.
BaseFSAgent:: Set Env Vars: \S+
BaseFSAgent::check Resource state changed, logging relevant information
BaseFSAgent::check State label:'.*'
BaseFSAgent::check admin unmounted '.*'
BaseFSAgent::check entered: \S+ volumeDevice=/dev/asm/ghchkpt-332; mountPath=/mnt/oracle/rhpimages/chkbase; \S+
BaseFSAgent::check returning: sid=.ASM1; volumeDevice=/dev/asm/ghchkpt-332; mountPath=/mnt/oracle/rhpimages/chkbase; \S+ \S+ \S+ \S+
BaseFSAgent::check returning: sid=; volumeDevice=/dev/asm/ghchkpt-332; mountPath=/mnt/oracle/rhpimages/chkbase; \S+ mountState=0; availState=-1; \S+ intendedState=ONLINE
BaseFSAgent::getAgent: \S+ \S+
BaseFSAgent::getAgent: type=acfs
BaseFSAgent::mount command /bin/mount -t acfs /dev/asm/ghchkpt-332 ".*"
BaseFSAgent::start entered: sid=.ASM1; volumeDevice=/dev/asm/ghchkpt-332; mountPath=/mnt/oracle/rhpimages/chkbase
BaseFSAgent::start maxWaitingTime: \S+ seconds
BaseFSAgent::start returning: sid=.ASM1; volumeDevice=/dev/asm/ghchkpt-332; mountPath=/mnt/oracle/rhpimages/chkbase
BaseFSAgent::stop \S+ sid=.ASM1; volumeDevice=/dev/asm/ghchkpt-332; mountPath=/mnt/oracle/rhpimages/chkbase
Calling targetcheck \S+
Check \S+
Check command exceedes time limit, but thread limit not reached
Checking if \S+ Interface is fine, \S+
Clean dhcp vip on \S+
Cleared pPEMsg in \S+
Command executor, maximum threads = \S+
Command: \S+ for resource: \S+ \S+ \S+ completed with status: \S+
Command: check for resource: \S+ \S+ \S+ has been aborted, updating resource state/label
Command: check for resource: \S+ \S+ \S+ has excedeed the maximum allowed time limit!
Connected to server running as user: root
Connecting to \S+
ConnectionPoolRoot::initMutex
Could not find any base type entry points for type: \S+ Assuming script entry points.
Could not find any base type named: \S+ type: \S+
Could not find the action entry: \S+
Created alert \S+ \(.*\) \S+  Aborting the command: check for resource: \S+ \S+ \S+
Created alert \S+ \(.*\) \S+  Disconnected from server, Agent is shutting down.
CrsCmd::stat3 \S+ \S+ TARGET:ONLINE
Deleting the mount thread
Deleting the resource: \S+ \S+ \S+
DerivedAttrMgr::getDerivedAttrMgr - no derived attributes are defined for resType \S+
Disconnected from \S+ process: \{.*\}
Error: gipcWait for gipcConnect - \S+ \S+
Failed to check \S+ on \S+
Failed to send dynamic control message to connection \[.*\]\[.*\]
Flushing neighbours \S+ Cache
GHAgent::check .*
GHAgent::check with \S+ and ret = \S+
GHAgent::start .*
Generating new Tint for unplanned state change. Original Tint: \{.*\}
HostName \S+ translated to \S+
ICMP Ping from \S+ to \S+
ID = \[.*\] Intermediate Timeout = \[.*\]
IncarnationTS = \S+
Inited lsf context \S+
Initing \S+ Framework messaging
Interface Name = \S+
InterfaceName = \S+
InterfaceNameList = \S+
Ipc: Starting send thread
Ipc: sendWork thread started.
IpcC: \S+ Client thread started listening
IpcC: \S+ client connection \S+ to member \S+ has been removed
IpcC: Member data received
IpcC: Received member number of \S+
Logging level for Module: \S+ \s*\S+
M2M is now powered by \S+ doWork\(.*\) thread.
M2M is starting...
Module Enabling is complete
Mount point '.*' unmounted.
NetInterface::NetInterface .*
NetInterface::sStopIp .*
NetworkAgent::init enter .*
NetworkAgent::init exit, \S+ \S+
NetworkAuto = static
NetworkMask = \S+
New \S+ .* username=root
New Framework state: \S+
New process connected to us ID:\{.*\} \S+
Ocr Context init default level \S+
Oracle Database \S+ Clusterware Release \S+ - Production Copyright \S+ \S+ Oracle. All rights reserved.
Preparing \S+ command for: \S+ \S+ \S+
Primary \S+ = \S+
Processing aborted reply \S+ check for resource: \S+ \S+ \S+
Removing \S+ Member:\{.*\}
Retrieved  GNS base domain:
Return code is \S+
Start \S+
Started implicit monitor for \[.*\] \S+ \S+
Starting offline monitor
Starting thread model named: \S+
Static Version \S+
Stopping ip '.*', inf '.*', mask '.*'
SubNet Number = \S+
Succeed to bind \S+
Switching \S+ monitor to \S+ one
TM \[.*\] is changing desired thread # to \S+ Current # is \S+
Thread:\[.*\] Skipping Agent Initiated \S+ check action
Thread:\[.*\] Thread exiting
Thread:\[.*\] Thread stop:thread acquire \S+ \S+
Thread:\[.*\] Thread stop:thread sltstjn
Thread:\[.*\] Thread::start .*
Thread:\[.*\] Thread::start spawn \S+ \S+
Thread:\[.*\] Thread::start spawned release \S+ .
Thread:\[.*\] Thread::start thread spawned \S+
Thread:\[.*\] isFinished set to true
Thread:\[.*\] isRunning is reset to false here
Thread:\[.*\] stop .*
Thread:\[.*\] stop release \S+ \S+
Thread:\[.*\] thread constructor exit \S+ \S+ \S+ \S+ \S+ \S+
Thread:\[.*\] thread constructor exit \S+ \S+ \S+ \S+ \S+
Thread::start .*
Thread::start spawn \S+ \S+
Thread::start spawned release \S+ .
Thread::start thread spawned \S+
Thread:MountFSThread MountFSThread::run\(.*\) Mount Succeeded
Thread:MountFSThread Thread stop:loopcount:59 \S+
Thread:MountFSThread Thread stop:thread acquire \S+ \S+
Thread:MountFSThread Thread stop:thread sltstjn
Thread:MountFSThread isFinished set to true
Thread:MountFSThread isRunning is reset to false here
Thread:MountFSThread stop .*
Thread:MountFSThread stop release \S+ .
Thread:MountFSThread thread constructor exit \S+ \S+ \S+ \S+ \S+ \S+
Thread:MountFSThread thread destructor entry .*
Thread:MountFSThread thread destructor m_pThnd:\(.*\) exit .
Thread:NetworkAgentCssIPSECGroupThread thread constructor exit \S+ \S+ \S+ \S+ \S+
Thread:NetworkMonitorThread thread constructor exit \S+ \S+ \S+ \S+ \S+
Thread:OcrCreateKeyValueThread\[.*\] Thread::start .*
Thread:OcrCreateKeyValueThread\[.*\] Thread::start spawn \S+ \S+
Thread:OcrCreateKeyValueThread\[.*\] Thread::start spawned release \S+ .
Thread:OcrCreateKeyValueThread\[.*\] Thread::start thread spawned \S+
Thread:OcrCreateKeyValueThread\[.*\] isFinished set to true
Thread:OcrCreateKeyValueThread\[.*\] isRunning is reset to false here
Thread:OcrCreateKeyValueThread\[.*\] thread constructor exit \S+ \S+ \S+ \S+ \S+ \S+
Thread:OcrCreateKeyValueThread\[.*\] thread constructor exit \S+ \S+ \S+ \S+ \S+
Thread:ReconnectingSubscribers  run .*
Thread:ReconnectingSubscribers  thread constructor exit \S+ \S+ \S+ \S+ \S+ \S+
Thread:TunnelThread thread constructor exit \S+ \S+ \S+ \S+ \S+ \S+
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ \S+ \S+ .*
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ \S+ \S+
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:\(.*\) Agent::commonCheck check failed \S+ \S+
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Agent::Agent \S+ \S+ \S+
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Agent::Agent refreshAttr
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Agent::commonCheck \S+ .*
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Agent::commonCheck exit \S+ .
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Agent::commonCheck notifyObservers
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Calling ioctl for disabling volume
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:Calling ioctl to check if volume is enabled
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:NetworkAgent::check Vendor Flag \S+
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:NetworkAgent::createVipResourceIfRequired.
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:VipAgent::init \S+ \S+ = \S+
Time:\S+ \S+ Tint:\{.*\} \S+ \S+ lastCall:
Tints initialized with nodeId: \S+ procId: \S+
Trace file \S+
TunnelThread::generateIPCAddr generated gipc addr = \S+
Unarp \S+ Cache
Unlocking cmdQ after check abort
Unmounting mount path /mnt/oracle/rhpimages/chkbase
UsmUtils::execCmd: cmd=/usr/sbin/exportfs \S+
UsmUtilsFS::realpath=/mnt/oracle/rhpimages/chkbase.
Utils::getOracleHomeAttrib \S+
Utils::getOracleHomeAttrib getEnvVar \S+
Utils::getResAttrib \S+ \S+ exit
Utils::getResAttrib entry \S+ \S+ \S+
Utils::getResAttrib: attribname \S+ value  len \S+
Utils::getResAttrib: attribname \S+ value true len \S+
Utils::setResAttrib \S+ attr \S+ value \S+ retCode \S+
Utils::setResAttrib \S+ attr \S+ value  retCode \S+
Utils::setResAttrib calling \S+ attr \S+ value \S+
Utils::setResAttrib cmdid \S+ checktype \S+
Utils::setResAttrib modifyResource attr \S+ value
Utils:execCmd action = \S+ flags = \S+ ohome = \(.*\) cmdname = ghappctl.
Utils:execCmd action = \S+ flags = \S+ ohome =  cmdname = \S+
Utils:execCmd scls_process_join\(.*\) uret \S+
VendorType=0
VipActions::startIp .*
VipActions::stopIp .*
VipAgent: \S+ = \S+
VipAgent: hostName \S+ is not in \S+
VipAgent::check Network check indicated \S+ \S+
VipAgent::checkIp returned false
VipAgent::init \S+ \S+ = \S+
VipAgent::sendFail2Srv .*
VipAgent::startOrphanSrv .*
VipAgent::stop\(.*\) called
VipAgent:getConfigVipAddr Current State  sv4: \S+ dv4 \S+  sv6 \S+  dv6 \S+  USR_ORA_AUTO \S+ static \S+ \S+ \S+
VolumeAgent::Constructor: Entered. \S+
VolumeAgent::check Resource state changed.Previous: '.*' New: '.*'
VolumeAgent::check: Entered. \S+
VolumeAgent::check: Returning. \S+ volumeDevice=/dev/asm/ghchkpt-332; volStatus=; \S+ \S+ \S+ \S+
VolumeAgent::disableVolume: \S+
VolumeAgent::enableVolume: \S+
VolumeAgent::fillAddVol \S+ \S+
VolumeAgent::getAgent: Entered. \S+ resVersion=12.2.0.1.0
VolumeAgent::ioctl=NOTFOUND
VolumeAgent::ioctl=SUCCESS
VolumeAgent::msg.dgName=YUHANMGMT
VolumeAgent::msg.volName=GHCHKPT
VolumeAgent::start: \S+
VolumeAgent::start: transparent ha exit .
VolumeAgent::stop: \S+
Worker thread is exiting in \S+ \[.*\] to meet the desired count of \S+ New count is \S+
Worker::schedule adding worker '.*' to thread '.*'
Worker::schedule thread '.*' not already created. Creating
WorkerThread::addWorker starting self
WorkerThread::addWorker total workers: \S+
WorkerThread::addWorker waiting for thread to start
adding state dumper of \S+
clean .*
clsce_subscribe \S+ .* \S+ \S+ \S+
clsdm select on
clsgpnp_Init: \S+ hash type in context is \S+
clsgpnp_getCachedProfileEx: \[.*\] Result: \(.*\) \S+ \(.*\)Can.* get offline GPnP service profile: local gpnpd is up and running. Use getProfile instead.
clsgpnp_getCachedProfileEx: \[.*\] Result: \(.*\) \S+ \(.*\)Failed to get offline GPnP service profile.
clsmdns-mDNS_StartExit: mDNSPlatformRawTime went backwards by \S+ ticks; setting correction factor to \S+
clsnUtils::setResAttrib nonPerX current value \S+ value \S+
clsnUtils::setResAttrib nonPerX current value \S+ value
clsn_agent::clean .*
clsn_agent::modify .*
clsn_agent::start .*
clsn_agent::stop .*
clsns_SetTraceLevel:trace level set to \S+
clsssinit: initialized context: \(.*\) flags \S+
clsssterm: terminating context \(.*\)
clsvactversion:\S+ Retrieving Active Version from local storage.
config version updated to \S+ \S+ for \S+ \S+ \S+
dynamic component \[.*\] mapped to \[.*\]
execCmd ret = \S+
getAttrs - NetworkAgent is not initialized
getAttrs - UserErrorException occured.Details: \S+ Expected resource \S+ does not exist in agent process
getAttrs .*
getUserPerms entered. crsAcl=owner:root:rwx,pgrp:root:r-x,other::r--,user:crsusr:r-x, oracleHome=/u01/app/12.2.0.1/grid
getUserPerms: Returning: \S+ \S+ \S+ \S+
gipcInternalSend: connection not valid for send operation endp \S+ \[.*\] \{.*\}, ret gipcretConnectionLost \(.*\)
gipcSendF \[.*\]: EXCEPTION\[.*\]  failed to send on endp \S+ \[.*\] \{.*\}, addr \S+ buf \S+ len \S+ cookie \(.*\), flags \S+
gipcWait failed.
gipcWait gets wrong msg from connection \[.*\]\[.*\] with type gipcreqtypeDisconnect
ifname=eth0
main::clsgnctrCreateReceivePacket:  connection version: \S+ \(.*\)
main::clsgnctrGetProtocol_Version: got connection version: \S+ \(.*\) from \S+ instance.
main::clsgnctrInitialize: active version ".*" \(.*\) using connection version \S+ \(.*\)
main::clsns_Send:#0 sending \S+ bytes from \S+ to udp://10.208.150.141:53
main::clsns_Send:send succeeded.
main::clsns_SetTraceLevel:trace level set to \S+
numThreads = 9,maxThreads = \S+
ora\S+ \S+ \S+ marked as deleted.
ora\S+ \S+ \S+ state changed from: \S+ to: \S+
ora\S+ \S+ \S+ state details has changed from: \S+ \S+ \S+ \S+ \S+ \S+ \S+ \S+
ora\S+ \S+ \S+ state details has changed from:  to: \S+ \S+ \S+
ora\S+ \S+ \S+ state details has changed from:  to: \S+ \S+
ora\S+ \S+ \S+ state details has changed from:  to: \S+
ora\S+ \S+ \S+ state details has changed from: volume /mnt/oracle/rhpimages/chkbase offline to: mounted on /mnt/oracle/rhpimages/chkbase
ora\S+ \S+ \S+ would \S+ continued to monitored!
returned from user exitCB, exiting
sclsiaddaddrs returned
sclsideladdrs returned
subnetmask=255.255.248.0
subnetnumber=10.208.144.0
targetcheck \S+ returned
targetcheck::Initial check target check \S+
